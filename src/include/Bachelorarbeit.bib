@misc{rfc7540,
	series = {Request for Comments},
	number = 7540,
	howpublished = {RFC 7540},
	publisher = {RFC Editor},
	doi = {10.17487/RFC7540},
	url = {https://rfc-editor.org/rfc/rfc7540.txt},
	author = {Mike Belshe and Roberto Peon and Martin Thomson},
	title = {{Hypertext Transfer Protocol Version 2 (HTTP/2)}},
	pagetotal = 96,
	year = 2015,
	month = may,
	abstract = {This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP),
	referred to as HTTP version 2 (HTTP/2).
	HTTP/2 enables a more efficient use of network resources and
	a reduced perception of latency by introducing header field compression and
	allowing multiple concurrent exchanges on the same connection.
	It also introduces unsolicited push of representations from servers to clients.
 This specification is an alternative to,
	but does not obsolete, the HTTP/1.1 message syntax.
	HTTP's existing semantics remain unchanged.},
}

@misc{rfc1945,
	series = {Request for Comments},
	number = 1945,
	howpublished = {RFC 1945},
	publisher = {RFC Editor},
	doi = {10.17487/RFC1945},
	url = {https://rfc-editor.org/rfc/rfc1945.txt},
	author = {Henrik Nielsen and Roy T. Fielding and Tim Berners-Lee},
	title = {{Hypertext Transfer Protocol -- HTTP/1.0}},
	pagetotal = 60,
	year = 1996,
	month = may,
	abstract = {The Hypertext Transfer Protocol (HTTP) is an application-level protocol
	with the lightness and speed necessary for distributed, collaborative, hypermedia information systems.
	This memo provides information for the Internet community.
	This memo does not specify an Internet standard of any kind.},
}

@misc{rfc7230,
	series = {Request for Comments},
	number = 7230,
	howpublished = {RFC 7230},
	publisher = {RFC Editor},
	doi = {10.17487/RFC7230},
	url = {https://rfc-editor.org/rfc/rfc7230.txt},
	author = {Roy T. Fielding and Julian Reschke},
	title = {{Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing}},
	pagetotal = 89,
	year = 2014,
	month = jun,
	abstract = {The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed,
	collaborative, hypertext information systems.
	This document provides an overview of HTTP architecture and its associated terminology,
	defines the "http" and "https" Uniform Resource Identifier (URI) schemes,
	defines the HTTP/1.1 message syntax and parsing requirements,
	and describes related security concerns for implementations.},
}

@misc{rfc2246,
	series = {Request for Comments},
	number = 2246,
	howpublished = {RFC 2246},
	publisher = {RFC Editor},
	doi = {10.17487/RFC2246},
	url = {https://rfc-editor.org/rfc/rfc2246.txt},
	author = {Christopher Allen and Tim Dierks},
	title = {{The TLS Protocol Version 1.0}},
	pagetotal = 80,
	year = 1999,
	month = jan,
	abstract = {This document specifies Version 1.0 of the Transport Layer Security (TLS) protocol.
	The TLS protocol provides communications privacy over the Internet.
	The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping,
	tampering, or message forgery.},
}

@misc{rfc8446,
	series = {Request for Comments},
	number = 8446,
	howpublished = {RFC 8446},
	publisher = {RFC Editor},
	doi = {10.17487/RFC8446},
	url = {https://rfc-editor.org/rfc/rfc8446.txt},
	author = {Eric Rescorla},
	title = {{The Transport Layer Security (TLS) Protocol Version 1.3}},
	pagetotal = 160,
	year = 2018,
	month = aug,
	abstract = {This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.
	TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping,
	tampering, and message forgery. This document updates RFCs 5705 and 6066,
	and obsoletes RFCs 5077, 5246, and 6961.
	This document also specifies new requirements for TLS 1.2 implementations.},
}

@misc{rfc5246,
	series = {Request for Comments},
	number = 5246,
	howpublished = {RFC 5246},
	publisher = {RFC Editor},
	doi = {10.17487/RFC5246},
	url = {https://rfc-editor.org/rfc/rfc5246.txt},
	author = {Eric Rescorla and Tim Dierks},
	title = {{The Transport Layer Security (TLS) Protocol Version 1.2}},
	pagetotal = 104,
	year = 2008,
	month = aug,
	abstract = {This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.
	The TLS protocol provides communications security over the Internet.
	The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping,
	tampering, or message forgery.
	{[} STANDARDS-TRACK {]}},
}

@misc{rfc6749,
	series = {Request for Comments},
	number = 6749,
	howpublished = {RFC 6749},
	publisher = {RFC Editor},
	doi = {10.17487/RFC6749},
	url = {https://rfc-editor.org/rfc/rfc6749.txt},
	author = {Dick Hardt},
	title = {{The OAuth 2.0 Authorization Framework}},
	pagetotal = 76,
	year = 2012,
	month = oct,
	abstract = {The OAuth 2.0 authorization framework enables a third-party application
	to obtain limited access to an HTTP service,
	either on behalf of a resource owner by orchestrating an approval interaction
	between the resource owner and the HTTP service,
	or by allowing the third-party application to obtain access on its own behalf.
	This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.
	{[}STANDARDS-TRACK{]}},
}

@misc{rfc5849,
	series = {Request for Comments},
	number = 5849,
	howpublished = {RFC 5849},
	publisher = {RFC Editor},
	doi = {10.17487/RFC5849},
	url = {https://rfc-editor.org/rfc/rfc5849.txt},
	author = {Eran Hammer-Lahav},
	title = {{The OAuth 1.0 Protocol}},
	pagetotal = 38,
	year = 2010,
	month = apr,
	abstract = {OAuth provides a method for clients to access server resources on behalf of a resource owner
	(such as a different client or an end-user).
	It also provides a process for end-users to authorize third-party access to their server resources
	without sharing their credentials (typically, a username and password pair),
	using user-agent redirections.
	This document is not an Internet Standards Track specification;
	it is published for informational purposes.},
}

@online{owasp_top_ten,
	title = {{OWASP} {Top} 10:2021},
	url = {https://owasp.org/Top10/},
	abstract = {OWASP Top 10:2021},
	urldate = {2022-03-23},
	year = 2021,
	author = {2021 OWASPTop10Team},
	urldate = {2022-07-06}
}

@online{smartbear_2022,
	title = {Swagger UI},
	url = {https://swagger.io/tools/swagger-ui/},
	urldate = {2022-05-30},
	journal = {REST API Documentation Tool | Swagger UI},
	author = {SmartBear},
	year = 2022,
urldate = {2022-07-06}
}

@online{WebServiceW3C,
	author = {Booth, David and
 Haas, Hugo and
 McCabe, Francis and
 Newcomer, Eric and
 Champion, Michael and
 Ferris, Chris and
 Orchard, David
    },
	title = {Web Services Architecture},
	year = 2004,
	month = feb,
	url = {https://www.w3.org/TR/ws-arch/},
	urldate = {2022-07-06}
}

@book{holgerschildt2022,
	author = {Holger Schildt},
	title = {IT-Grundschutz-Kompendium},
	publisher = {Bundesamt f√ºr Sicherheit in der Informationstechnik, Bonn},
	year = 2022,
	month = feb,
	isbn = {978-3-8462-0906-6},
}

@online{srivastava_2022,
	title = {Differences between .NET Core and .NET framework},
	url = {https://www.geeksforgeeks.org/differences-between-net-core-and-net-framework/#:~:text=Application%20Models-,.,windows%20forms%20and%20WPF%20applications.},
	journal = {GeeksforGeeks},
	publisher = {GeeksforGeeks},
	author = {Srivastava, Nirmit},
	year = 2022,
	month = jun,
	urldate = {2022-07-06}
}

@online{miller_whitlock_gardiner_ralphson_ratovsky_sarid_2017,
	title = {OpenAPI Specification V3.0.0},
	url = {https://spec.openapis.org/oas/v3.0.0},
	journal = {OpenAPI Specification v3.0.0 | Introduction, Definitions & More},
	publisher = {the Linux Foundation},
	author = {Miller, Darrel and Whitlock, Jeremy and Gardiner, Marsh and Ralphson, Mike and Ratovsky, Ron and Sarid, Uri},
	year = 2017,
	month = jul,
	urldate = {2022-07-06}
}
